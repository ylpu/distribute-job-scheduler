CREATE DATABASE IF NOT EXISTS thales DEFAULT CHARSET utf8 COLLATE utf8_general_ci;
use thales;

DROP TABLE IF EXISTS t_thales_scheduler_job;  
DROP TABLE IF EXISTS t_thales_scheduler_job_instance;
DROP TABLE IF EXISTS t_thales_scheduler_job_relation;
DROP TABLE IF EXISTS t_thales_scheduler_worker;
DROP TABLE IF EXISTS t_thales_scheduler_user;
DROP TABLE IF EXISTS t_thales_scheduler_role;
DROP TABLE IF EXISTS t_thales_scheduler_user_role;
DROP TABLE IF EXISTS t_thales_scheduler_connection;
DROP TABLE IF EXISTS t_thales_scheduler_group_strategy;

CREATE TABLE `t_thales_scheduler_job` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `job_name` varchar(512) DEFAULT NULL COMMENT '任务名称',
  `job_type` tinyint(4) DEFAULT NULL COMMENT '任务类型，1-sql,2-spark,3-shell',
  `job_configuration` longtext DEFAULT NULL COMMENT '任务配置',
  `job_priority` int(4) DEFAULT NULL COMMENT '任务优先级,1-low,2,middle,3-high',
  `creator_id` varchar(50) COMMENT '任务创建人',
  `owner_ids` varchar(512) DEFAULT NULL COMMENT '任务owner',
  `alert_users` varchar(512) DEFAULT NULL COMMENT '任务告警人',
  `alert_types` tinyint(4) DEFAULT NULL COMMENT '任务告警类型 1-sms,2-wechat,3-email',
  `schedule_cron` varchar(50) DEFAULT NULL COMMENT '任务执行表达式',
  `is_selfDependent` tinyint(1)  DEFAULT NULL COMMENT '是否自依赖',
  `job_cycle` tinyint(4) DEFAULT NULL COMMENT '任务执行周期 1-minute,2-hour,3-day,4-week,5-month,6-year',
  `max_retrytimes` int(4) DEFAULT NULL COMMENT '任务重试次数',
  `retry_interval` int(10) DEFAULT NULL COMMENT '重试间隔',
  `execution_timeout` int(10) DEFAULT '0' COMMENT '执行超时时间',
  `worker_groupName` varchar(50) DEFAULT NULL COMMENT '任务机器组',
  `job_ReleaseState` tinyint(4)  DEFAULT NULL COMMENT '任务状态，-1-删除，0-上线，1-下线',
  `description` varchar(512) DEFAULT NULL COMMENT '任务描述',
  `create_time` datetime DEFAULT NULL COMMENT '任务创建时间',
  `update_time` datetime DEFAULT NULL COMMENT '任务修改时间',
  PRIMARY KEY (`id`)
 ) ENGINE=InnoDB AUTO_INCREMENT=29 DEFAULT CHARSET=utf8;

CREATE TABLE `t_thales_scheduler_job_instance` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `job_id` int(11) DEFAULT NULL COMMENT '任务id',
  `task_state` tinyint(4) DEFAULT NULL COMMENT '任务状态,1-SUBMIT, 2-PENDING, 3-WAITING, 4-RUNNING, 5-KILL, 6-SUCCESS, 7-FAIL',
  `log_url` varchar(512) DEFAULT NULL COMMENT '任务日志url',
  `log_path` varchar(512) DEFAULT NULL COMMENT '任务日志路径',
  `worker` varchar(50) DEFAULT NULL COMMENT '任务执行节点',
  `creator_name` varchar(50) DEFAULT NULL COMMENT '任务触发人',
  `creator_email` varchar(50) DEFAULT NULL COMMENT '任务触发人邮件',
  `retry_times` int DEFAULT NULL COMMENT '重试次数',
  `pid` int(11) DEFAULT NULL COMMENT '任务进程id',
  `applicationId` varchar(50) DEFAULT NULL COMMENT 'yarn任务应用id',
  `schedule_time` datetime DEFAULT NULL COMMENT '任务预计开始时间，比如任务预计10点执行，但由于quartz调度器非常繁忙，有可能10点01分才开始执行',
  `start_time` datetime DEFAULT NULL COMMENT '任务真实开始时间',
  `end_time` datetime DEFAULT NULL COMMENT '任务结束时间',
  `parameters` varchar(512) DEFAULT NULL COMMENT '任务参数',
  `elapse_time` int(11) DEFAULT NULL COMMENT '任务花费时间',
  `create_time` datetime DEFAULT NULL COMMENT '任务创建时间',
  `update_time` datetime DEFAULT NULL COMMENT '任务修改时间',
  PRIMARY KEY (`id`)
 ) ENGINE=InnoDB AUTO_INCREMENT=29 DEFAULT CHARSET=utf8;

CREATE TABLE `t_thales_scheduler_job_relation` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `job_id` int(11) DEFAULT NULL COMMENT '任务id',
  `parentJob_id` int(11) DEFAULT NULL COMMENT '父任务id',
  `create_time` datetime DEFAULT NULL COMMENT '任务创建时间',
  `update_time` datetime DEFAULT NULL COMMENT '任务修改时间',
  PRIMARY KEY (`id`)
 ) ENGINE=InnoDB AUTO_INCREMENT=29 DEFAULT CHARSET=utf8;

CREATE TABLE `t_thales_scheduler_worker` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `worker_type` tinyint(4) DEFAULT NULL COMMENT '节点类型，1-master,2-worker',
  `host` varchar(128) DEFAULT NULL COMMENT '节点主机名称',
  `port` int(4) DEFAULT NULL COMMENT '节点端口',
  `worker_group` varchar(50) DEFAULT NULL COMMENT '节点组',
  `zkDirectory` varchar(512) DEFAULT NULL COMMENT '节点目录',
  `cpu_usage` double(5,2) DEFAULT NULL COMMENT 'cpu使用率',
  `memory_usage` double(5,2) DEFAULT NULL COMMENT '内存使用率',
  `last_heartbeat_time` datetime DEFAULT NULL COMMENT '节点心跳时间',
  `worker_status` tinyint(4) DEFAULT NULL COMMENT '节点状态，1-added,2-removed',
  `create_time` datetime DEFAULT NULL COMMENT '节点创建时间',
  `update_time` datetime DEFAULT NULL COMMENT '节点修改时间',
  PRIMARY KEY (`id`)
 ) ENGINE=InnoDB AUTO_INCREMENT=29 DEFAULT CHARSET=utf8;
 
 CREATE TABLE `t_thales_scheduler_user` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `user_name` varchar(512) DEFAULT NULL COMMENT '用户名',
  `password` varchar(512) DEFAULT NULL COMMENT '密码',
  `confirm_pass` varchar(512) DEFAULT NULL COMMENT '确认密码',
  `email` varchar(512) DEFAULT NULL COMMENT '邮箱地址',
  `create_time` datetime DEFAULT NULL COMMENT '用户创建时间',
  `update_time` datetime DEFAULT NULL COMMENT '用户修改时间',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=66 DEFAULT CHARSET=utf8;

CREATE TABLE `t_thales_scheduler_role` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `role_name` varchar(512) DEFAULT NULL COMMENT '角色名',
  `create_time` datetime DEFAULT NULL COMMENT '角色创建时间',
  `update_time` datetime DEFAULT NULL COMMENT '角色修改时间',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=66 DEFAULT CHARSET=utf8;

CREATE TABLE `t_thales_scheduler_user_role` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `user_id` int(4) DEFAULT NULL COMMENT '用户id',
  `role_id` int(4) DEFAULT NULL COMMENT '角色id',
  `create_time` datetime DEFAULT NULL COMMENT '用户角色创建时间',
  `update_time` datetime DEFAULT NULL COMMENT '用户角色修改时间',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=66 DEFAULT CHARSET=utf8;

CREATE TABLE `t_thales_scheduler_connection` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `connection_id` varchar(50) DEFAULT NULL COMMENT '连接名',
  `connection_type` varchar(50) DEFAULT NULL COMMENT '连接类型',
  `hostname` varchar(50) DEFAULT NULL COMMENT '主机名',
  `port` int(5) DEFAULT NULL COMMENT '端口号',
  `db_schema` varchar(50) DEFAULT NULL COMMENT '数据库',
  `username` varchar(50) DEFAULT NULL COMMENT '用户名',
  `password` varchar(50) DEFAULT NULL COMMENT '密码',
  `create_time` datetime DEFAULT NULL COMMENT '连接创建时间',
  `update_time` datetime DEFAULT NULL COMMENT '连接修改时间',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=66 DEFAULT CHARSET=utf8;

CREATE TABLE `t_thales_scheduler_group_strategy` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `group_name` varchar(512) DEFAULT NULL COMMENT '组名',
  `group_strategy` varchar(512) DEFAULT NULL COMMENT '组策略',
  `create_time` datetime DEFAULT NULL COMMENT '创建时间',
  `update_time` datetime DEFAULT NULL COMMENT '修改时间',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=66 DEFAULT CHARSET=utf8;

CREATE INDEX idx_state_ownerids ON t_thales_scheduler_job (job_releasestate,owner_ids);
CREATE INDEX idx_job_name ON t_thales_scheduler_job (job_name);
CREATE INDEX idx_job_type ON t_thales_scheduler_job (job_type);
CREATE INDEX idx_user_name ON t_thales_scheduler_user (user_name);
CREATE INDEX idx_connection_id ON t_thales_scheduler_connection (connection_id);
CREATE INDEX idx_role_name ON t_thales_scheduler_role (role_name);
CREATE INDEX idx_user_role ON t_thales_scheduler_user_role (user_id,role_id);
CREATE INDEX idx_create_time ON t_thales_scheduler_job_instance (create_time);

DROP TABLE IF EXISTS QRTZ_FIRED_TRIGGERS;  
DROP TABLE IF EXISTS QRTZ_PAUSED_TRIGGER_GRPS;  
DROP TABLE IF EXISTS QRTZ_SCHEDULER_STATE;  
DROP TABLE IF EXISTS QRTZ_LOCKS;  
DROP TABLE IF EXISTS QRTZ_SIMPLE_TRIGGERS;  
DROP TABLE IF EXISTS QRTZ_SIMPROP_TRIGGERS;  
DROP TABLE IF EXISTS QRTZ_CRON_TRIGGERS;  
DROP TABLE IF EXISTS QRTZ_BLOB_TRIGGERS;  
DROP TABLE IF EXISTS QRTZ_TRIGGERS;  
DROP TABLE IF EXISTS QRTZ_JOB_DETAILS;  
DROP TABLE IF EXISTS QRTZ_CALENDARS;  
  
CREATE TABLE QRTZ_JOB_DETAILS(  
SCHED_NAME VARCHAR(120) NOT NULL,  
JOB_NAME VARCHAR(200) NOT NULL,  
JOB_GROUP VARCHAR(200) NOT NULL,  
DESCRIPTION VARCHAR(250) NULL,  
JOB_CLASS_NAME VARCHAR(250) NOT NULL,  
IS_DURABLE VARCHAR(1) NOT NULL,  
IS_NONCONCURRENT VARCHAR(1) NOT NULL,  
IS_UPDATE_DATA VARCHAR(1) NOT NULL,  
REQUESTS_RECOVERY VARCHAR(1) NOT NULL,  
JOB_DATA BLOB NULL,  
PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP))  
ENGINE=InnoDB;  
  
CREATE TABLE QRTZ_TRIGGERS (  
SCHED_NAME VARCHAR(120) NOT NULL,  
TRIGGER_NAME VARCHAR(200) NOT NULL,  
TRIGGER_GROUP VARCHAR(200) NOT NULL,  
JOB_NAME VARCHAR(200) NOT NULL,  
JOB_GROUP VARCHAR(200) NOT NULL,  
DESCRIPTION VARCHAR(250) NULL,  
NEXT_FIRE_TIME BIGINT(13) NULL,  
PREV_FIRE_TIME BIGINT(13) NULL,  
PRIORITY INTEGER NULL,  
TRIGGER_STATE VARCHAR(16) NOT NULL,  
TRIGGER_TYPE VARCHAR(8) NOT NULL,  
START_TIME BIGINT(13) NOT NULL,  
END_TIME BIGINT(13) NULL,  
CALENDAR_NAME VARCHAR(200) NULL,  
MISFIRE_INSTR SMALLINT(2) NULL,  
JOB_DATA BLOB NULL,  
PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),  
FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)  
REFERENCES QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP))  
ENGINE=InnoDB;  
  
CREATE TABLE QRTZ_SIMPLE_TRIGGERS (  
SCHED_NAME VARCHAR(120) NOT NULL,  
TRIGGER_NAME VARCHAR(200) NOT NULL,  
TRIGGER_GROUP VARCHAR(200) NOT NULL,  
REPEAT_COUNT BIGINT(7) NOT NULL,  
REPEAT_INTERVAL BIGINT(12) NOT NULL,  
TIMES_TRIGGERED BIGINT(10) NOT NULL,  
PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),  
FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)  
REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP))  
ENGINE=InnoDB;  
  
CREATE TABLE QRTZ_CRON_TRIGGERS (  
SCHED_NAME VARCHAR(120) NOT NULL,  
TRIGGER_NAME VARCHAR(200) NOT NULL,  
TRIGGER_GROUP VARCHAR(200) NOT NULL,  
CRON_EXPRESSION VARCHAR(120) NOT NULL,  
TIME_ZONE_ID VARCHAR(80),  
PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),  
FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)  
REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP))  
ENGINE=InnoDB;  
  
CREATE TABLE QRTZ_SIMPROP_TRIGGERS  
  (            
    SCHED_NAME VARCHAR(120) NOT NULL,  
    TRIGGER_NAME VARCHAR(200) NOT NULL,  
    TRIGGER_GROUP VARCHAR(200) NOT NULL,  
    STR_PROP_1 VARCHAR(512) NULL,  
    STR_PROP_2 VARCHAR(512) NULL,  
    STR_PROP_3 VARCHAR(512) NULL,  
    INT_PROP_1 INT NULL,  
    INT_PROP_2 INT NULL,  
    LONG_PROP_1 BIGINT NULL,  
    LONG_PROP_2 BIGINT NULL,  
    DEC_PROP_1 NUMERIC(13,4) NULL,  
    DEC_PROP_2 NUMERIC(13,4) NULL,  
    BOOL_PROP_1 VARCHAR(1) NULL,  
    BOOL_PROP_2 VARCHAR(1) NULL,  
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),  
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)   
    REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP))  
ENGINE=InnoDB;  
  
CREATE TABLE QRTZ_BLOB_TRIGGERS (  
SCHED_NAME VARCHAR(120) NOT NULL,  
TRIGGER_NAME VARCHAR(200) NOT NULL,  
TRIGGER_GROUP VARCHAR(200) NOT NULL,  
BLOB_DATA BLOB NULL,  
PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),  
INDEX (SCHED_NAME,TRIGGER_NAME, TRIGGER_GROUP),  
FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)  
REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP))  
ENGINE=InnoDB;  
  
CREATE TABLE QRTZ_CALENDARS (  
SCHED_NAME VARCHAR(120) NOT NULL,  
CALENDAR_NAME VARCHAR(200) NOT NULL,  
CALENDAR BLOB NOT NULL,  
PRIMARY KEY (SCHED_NAME,CALENDAR_NAME))  
ENGINE=InnoDB;  
  
CREATE TABLE QRTZ_PAUSED_TRIGGER_GRPS (  
SCHED_NAME VARCHAR(120) NOT NULL,  
TRIGGER_GROUP VARCHAR(200) NOT NULL,  
PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP))  
ENGINE=InnoDB;  
  
CREATE TABLE QRTZ_FIRED_TRIGGERS (  
SCHED_NAME VARCHAR(120) NOT NULL,  
ENTRY_ID VARCHAR(95) NOT NULL,  
TRIGGER_NAME VARCHAR(200) NOT NULL,  
TRIGGER_GROUP VARCHAR(200) NOT NULL,  
INSTANCE_NAME VARCHAR(200) NOT NULL,  
FIRED_TIME BIGINT(13) NOT NULL,  
SCHED_TIME BIGINT(13) NOT NULL,  
PRIORITY INTEGER NOT NULL,  
STATE VARCHAR(16) NOT NULL,  
JOB_NAME VARCHAR(200) NULL,  
JOB_GROUP VARCHAR(200) NULL,  
IS_NONCONCURRENT VARCHAR(1) NULL,  
REQUESTS_RECOVERY VARCHAR(1) NULL,  
PRIMARY KEY (SCHED_NAME,ENTRY_ID))  
ENGINE=InnoDB;  
  
CREATE TABLE QRTZ_SCHEDULER_STATE (  
SCHED_NAME VARCHAR(120) NOT NULL,  
INSTANCE_NAME VARCHAR(200) NOT NULL,  
LAST_CHECKIN_TIME BIGINT(13) NOT NULL,  
CHECKIN_INTERVAL BIGINT(13) NOT NULL,  
PRIMARY KEY (SCHED_NAME,INSTANCE_NAME))  
ENGINE=InnoDB;  
  
CREATE TABLE QRTZ_LOCKS (  
SCHED_NAME VARCHAR(120) NOT NULL,  
LOCK_NAME VARCHAR(40) NOT NULL,  
PRIMARY KEY (SCHED_NAME,LOCK_NAME))  
ENGINE=InnoDB;  
  
CREATE INDEX IDX_QRTZ_J_REQ_RECOVERY ON QRTZ_JOB_DETAILS(SCHED_NAME,REQUESTS_RECOVERY);  
CREATE INDEX IDX_QRTZ_J_GRP ON QRTZ_JOB_DETAILS(SCHED_NAME,JOB_GROUP);  
  
CREATE INDEX IDX_QRTZ_T_J ON QRTZ_TRIGGERS(SCHED_NAME,JOB_NAME,JOB_GROUP);  
CREATE INDEX IDX_QRTZ_T_JG ON QRTZ_TRIGGERS(SCHED_NAME,JOB_GROUP);  
CREATE INDEX IDX_QRTZ_T_C ON QRTZ_TRIGGERS(SCHED_NAME,CALENDAR_NAME);  
CREATE INDEX IDX_QRTZ_T_G ON QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_GROUP);  
CREATE INDEX IDX_QRTZ_T_STATE ON QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_STATE);  
CREATE INDEX IDX_QRTZ_T_N_STATE ON QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);  
CREATE INDEX IDX_QRTZ_T_N_G_STATE ON QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);  
CREATE INDEX IDX_QRTZ_T_NEXT_FIRE_TIME ON QRTZ_TRIGGERS(SCHED_NAME,NEXT_FIRE_TIME);  
CREATE INDEX IDX_QRTZ_T_NFT_ST ON QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);  
CREATE INDEX IDX_QRTZ_T_NFT_MISFIRE ON QRTZ_TRIGGERS(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);  
CREATE INDEX IDX_QRTZ_T_NFT_ST_MISFIRE ON QRTZ_TRIGGERS(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);  
CREATE INDEX IDX_QRTZ_T_NFT_ST_MISFIRE_GRP ON QRTZ_TRIGGERS(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);  
  
CREATE INDEX IDX_QRTZ_FT_TRIG_INST_NAME ON QRTZ_FIRED_TRIGGERS(SCHED_NAME,INSTANCE_NAME);  
CREATE INDEX IDX_QRTZ_FT_INST_JOB_REQ_RCVRY ON QRTZ_FIRED_TRIGGERS(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);  
CREATE INDEX IDX_QRTZ_FT_J_G ON QRTZ_FIRED_TRIGGERS(SCHED_NAME,JOB_NAME,JOB_GROUP);  
CREATE INDEX IDX_QRTZ_FT_JG ON QRTZ_FIRED_TRIGGERS(SCHED_NAME,JOB_GROUP);  
CREATE INDEX IDX_QRTZ_FT_T_G ON QRTZ_FIRED_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);  
CREATE INDEX IDX_QRTZ_FT_TG ON QRTZ_FIRED_TRIGGERS(SCHED_NAME,TRIGGER_GROUP);

commit;