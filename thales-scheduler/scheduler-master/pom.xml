<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.ylpu.thales</groupId>
    <artifactId>thales-scheduler</artifactId>
    <version>1.0.0</version>
  </parent>
  <artifactId>scheduler-master</artifactId>
  <dependencies>
     <dependency>
         <groupId>junit</groupId>
         <artifactId>junit</artifactId>
         <scope>test</scope>
     </dependency>
     <dependency>
         <groupId>mysql</groupId>
         <artifactId>mysql-connector-java</artifactId>
     </dependency>
     <dependency>
         <groupId>com.ylpu.thales</groupId>
         <artifactId>scheduler-core</artifactId>
     </dependency>
     <dependency>
	     <groupId>com.sun.jdmk </groupId>
	     <artifactId>jmxtools </artifactId>
	     <scope>system</scope>
	     <systemPath>${basedir}/lib/jmxtools.jar</systemPath>	
      </dependency>  
      <dependency>
	     <groupId>javax.management</groupId>
	     <artifactId>jmxri </artifactId>
	     <scope>system</scope>
	     <systemPath>${basedir}/lib/jmxri.jar</systemPath>	
      </dependency>
     <dependency>
         <groupId>org.quartz-scheduler</groupId>
         <artifactId>quartz</artifactId>
     </dependency> 
     <dependency>
         <groupId>org.quartz-scheduler</groupId>
         <artifactId>quartz-jobs</artifactId>
     </dependency>
     <dependency>
         <groupId>org.projectlombok</groupId>
         <artifactId>lombok</artifactId>
     </dependency>  
     <dependency>
         <groupId>org.eclipse.jetty.aggregate</groupId>
         <artifactId>jetty-all</artifactId>
      </dependency>
      <dependency>
         <groupId>com.sun.jersey</groupId>
         <artifactId>jersey-servlet</artifactId>
      </dependency>
      <dependency>
         <groupId>javax.servlet</groupId>
         <artifactId>javax.servlet-api</artifactId>
      </dependency>
      <dependency>
         <groupId>org.eclipse.jetty</groupId>
         <artifactId>jetty-jsp</artifactId>
      </dependency> 
      <dependency>
           <groupId>com.ylpu.thales</groupId>
           <artifactId>scheduler-alert</artifactId>
      </dependency> 
  </dependencies>
     <build>
        <plugins>
             <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-resources-1</id>
                        <!-- 绑定到 maven 生命周期的哪一节段 -->
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <encoding>UTF-8</encoding>
                            <!-- ${project.build.outputDirectory} 为构建过程输出目录，缺省为target/classes -->
                            <outputDirectory>${project.build.directory}/../config</outputDirectory>
                            <resources>
                                <resource>
                                    <!-- 需要拷贝的资源文件位置 -->
                                    <directory>src/main/resources</directory>
                                    <includes>
                                       <include>*.*</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-resources-2</id>
                        <!-- 绑定到 maven 生命周期的哪一节段 -->
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <encoding>UTF-8</encoding>
                            <!-- ${project.build.outputDirectory} 为构建过程输出目录，缺省为target/classes -->
                            <outputDirectory>${project.build.directory}/../bin</outputDirectory>
                            <resources>
                                <resource>
                                    <!-- 需要拷贝的资源文件位置 -->
                                    <directory>src/script</directory>
                                    <includes>
                                       <include>*.*</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>com.ylpu.thales.scheduler.master.server.MasterServer</mainClass>
                        </manifest>
                    </archive>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                    <descriptors>
                        <descriptor>${basedir}/package.xml</descriptor>
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id> <!-- this is used for inheritance merges -->
                        <phase>package</phase> <!-- 指定在打包节点执行jar包合并操作 -->
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>