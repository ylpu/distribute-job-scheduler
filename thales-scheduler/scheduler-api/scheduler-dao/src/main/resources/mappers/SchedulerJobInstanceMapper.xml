<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ylpu.thales.scheduler.dao.SchedulerJobInstanceMapper" >
  <resultMap id="BaseResultMap" type="com.ylpu.thales.scheduler.entity.SchedulerJobInstance" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="job_id" property="jobId" jdbcType="INTEGER" />
    <result column="job_name" property="jobName" jdbcType="VARCHAR" />
    <result column="job_type" property="jobType" jdbcType="TINYINT" />
    <result column="job_ReleaseState" property="jobReleasestate" jdbcType="TINYINT" />
    <result column="task_state" property="taskState" jdbcType="TINYINT" />
    <result column="log_url" property="logUrl" jdbcType="VARCHAR" />
    <result column="log_path" property="logPath" jdbcType="VARCHAR" />
    <result column="worker" property="worker" jdbcType="VARCHAR" />
    <result column="creator_name" property="creatorName" jdbcType="VARCHAR" />
    <result column="creator_email" property="creatorEmail" jdbcType="VARCHAR" />
    <result column="retry_times" property="retryTimes" jdbcType="INTEGER" />
    <result column="pid" property="pid" jdbcType="INTEGER" />
    <result column="applicationId" property="applicationid" jdbcType="VARCHAR" />
    <result column="elapse_time" property="elapseTime" jdbcType="INTEGER" />
    <result column="schedule_time" property="scheduleTime" jdbcType="TIMESTAMP" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="parameters" property="parameters" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="jobInstanceStateMap" type="com.ylpu.thales.scheduler.entity.JobInstanceState" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="job_id" property="jobId" jdbcType="INTEGER" />
    <result column="task_state" property="taskState" jdbcType="TINYINT" />
    <result column="schedule_time" property="scheduleTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="taskSummaryMap" type="com.ylpu.thales.scheduler.entity.TaskSummary" >
    <result column="task_state" property="taskState" jdbcType="INTEGER" />
    <result column="task_Count" property="taskCount" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="workerSummaryMap" type="com.ylpu.thales.scheduler.entity.WorkerSummary" >
    <result column="worker" property="workerName" jdbcType="VARCHAR" />
    <result column="task_Count" property="taskCount" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="jobTypeSummaryMap" type="com.ylpu.thales.scheduler.entity.JobTypeSummary" >
    <result column="job_type" property="jobType" jdbcType="INTEGER" />
    <result column="task_Count" property="taskCount" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="taskElapseMap" type="com.ylpu.thales.scheduler.entity.TaskElapseChart" >
    <result column="schedule_time" property="scheduleTime" jdbcType="TIMESTAMP" />
    <result column="elapse_time" property="elapseTime" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, job_id, task_state, log_url, log_path, worker, creator_name, creator_email, retry_times, 
    pid, applicationId, elapse_time, create_time, update_time,schedule_time,start_time,end_time,parameters
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select instance.id,instance.job_id,job.job_name,job.job_type,job.job_ReleaseState,instance.task_state,instance.log_url,instance.log_path,instance.worker,instance.creator_name,
        instance.creator_email,instance.retry_times,instance.pid,instance.applicationId,instance.elapse_time,
        instance.schedule_time,instance.start_time,instance.end_time,instance.create_time,instance.update_time,instance.parameters
        from t_thales_scheduler_job_instance instance left join t_thales_scheduler_job job on instance.job_id = job.id where instance.id = #{id,jdbcType=INTEGER}
  </select>
  <select id = "getRunningJobCount" resultType="java.util.HashMap">
      select worker,count(*) as cnt from t_thales_scheduler_job_instance  where task_state = 4 group by worker
  </select>
  <select id = "getTaskSummary" resultMap="taskSummaryMap">
      select task_state,count(*) as task_Count from t_thales_scheduler_job_instance instance inner join t_thales_scheduler_job job on instance.job_id = job.id where job.job_ReleaseState != -1 group by task_state
  </select>
  <select id = "getWorkerSummary" resultMap="workerSummaryMap">
      select worker,count(*) as task_Count from t_thales_scheduler_job_instance where worker is not null group by worker
  </select>
  
  <select id = "getJobTypeSummary" resultMap="jobTypeSummaryMap">
	  select job.job_type ,count(*) as task_Count from t_thales_scheduler_job_instance job_instance left join t_thales_scheduler_job job on job_instance.job_id = job.id
      group by job.job_type
  </select>
  
  <select id = "getJobInstanceByTime" resultMap="BaseResultMap">
      select * from t_thales_scheduler_job_instance  where job_id = #{jobId,jdbcType=INTEGER} and schedule_time = #{scheduleTime,jdbcType=VARCHAR}
  </select>
  
    <select id = "getInstantCount" resultType="java.lang.Integer">
      select count(*) from t_thales_scheduler_job_instance instance left join t_thales_scheduler_job job on instance.job_id = job.id where job.job_ReleaseState != -1
      <if test="taskState != null and taskState != ''">
           and instance.task_state = #{taskState}     
      </if>
      <if test="jobName != null and jobName != ''">
           and job.job_name like concat(concat('%',#{jobName}),'%')
      </if>
      <if test="userName != null and userName != ''">
           and (job.owner_ids = #{userName} or job.owner_ids like concat(#{userName},',%') or job.owner_ids like concat('%,',#{userName}) or job.owner_ids like concat(concat('%,',#{userName}),',%'))
      </if>
   </select>

    <select id="findAll" resultMap="BaseResultMap">
        select instance.id,job.job_name,job.job_type,job.job_ReleaseState,instance.task_state,instance.log_url,instance.log_path,instance.worker,instance.creator_name,
        instance.creator_email,instance.retry_times,instance.pid,instance.applicationId,instance.elapse_time,
        instance.schedule_time,instance.start_time,instance.end_time,instance.create_time,instance.update_time,instance.parameters
        from t_thales_scheduler_job_instance instance left join t_thales_scheduler_job job on instance.job_id = job.id where job.job_ReleaseState != -1
            <if test="taskState != null and taskState != ''">
                and instance.task_state = #{taskState}
            </if>
            <if test="userName != null and userName != ''">
                and (job.owner_ids = #{userName} or job.owner_ids like concat(#{userName},',%') or job.owner_ids like concat('%,',#{userName}) or job.owner_ids like concat(concat('%,',#{userName}),',%'))
            </if>
            <if test="jobName != null and jobName != ''">	
                and job.job_name like concat(concat('%',#{jobName}),'%')
            </if>
        ORDER BY instance.create_time DESC
    </select>
 <!--   
  <select id = "getAllJobStatus" resultMap="jobInstanceStateMap">
      select id,job_id,task_state,schedule_time from t_thales_scheduler_job_instance where schedule_time is not null and schedule_time &gt; #{startTime,jdbcType=TIMESTAMP} and schedule_time &lt; #{endTime,jdbcType=TIMESTAMP}
  </select>
 -->
   <select id = "getAllJobStatus" resultMap="jobInstanceStateMap">
      select id,job_id,task_state,schedule_time from t_thales_scheduler_job_instance
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_thales_scheduler_job_instance
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ylpu.thales.scheduler.entity.SchedulerJobInstance" >
    insert into t_thales_scheduler_job_instance (id, job_id, task_state, 
      log_url,log_path, worker,creator_name, 
      creator_email, retry_times, pid, 
      applicationId, elapse_time, schedule_time,start_time,end_time,create_time, 
      update_time,parameters)
    values (#{id,jdbcType=INTEGER}, #{jobId,jdbcType=INTEGER}, #{taskState,jdbcType=TINYINT}, 
      #{logUrl,jdbcType=VARCHAR}, #{logPath,jdbcType=VARCHAR}, #{worker,jdbcType=VARCHAR}, #{creatorName,jdbcType=VARCHAR}, 
      #{creatorEmail,jdbcType=VARCHAR}, #{retryTimes,jdbcType=TINYINT}, #{pid,jdbcType=INTEGER}, 
      #{applicationid,jdbcType=VARCHAR},#{elapseTime,jdbcType=INTEGER},#{scheduleTime,jdbcType=TIMESTAMP},#{startTime,jdbcType=TIMESTAMP},
      #{endTime,jdbcType=TIMESTAMP},#{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}),#{parameters,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ylpu.thales.scheduler.entity.SchedulerJobInstance" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
    insert into t_thales_scheduler_job_instance
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="jobId != null" >
        job_id,
      </if>
      <if test="taskState != null" >
        task_state,
      </if>
      <if test="logUrl != null" >
        log_url,
      </if>
      <if test="logPath != null" >
        log_path,
      </if>
      <if test="worker != null" >
        worker,
      </if>
      <if test="creatorName != null" >
        creator_name,
      </if>
      <if test="creatorEmail != null" >
        creator_email,
      </if>
      <if test="retryTimes != null" >
        retry_times,
      </if>
      <if test="pid != null" >
        pid,
      </if>
      <if test="applicationid != null" >
        applicationId,
      </if>
      <if test="elapseTime != null" >
        elapse_time,
      </if>
      <if test="scheduleTime != null" >
        schedule_time,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="parameters != null" >
        parameters
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="jobId != null" >
        #{jobId,jdbcType=INTEGER},
      </if>
      <if test="taskState != null" >
        #{taskState,jdbcType=TINYINT},
      </if>
      <if test="logUrl != null" >
        #{logUrl,jdbcType=VARCHAR},
      </if>
      <if test="logPath != null" >
        #{logPath,jdbcType=VARCHAR},
      </if>
      <if test="worker != null" >
        #{worker,jdbcType=VARCHAR},
      </if>
      <if test="creatorName != null" >
        #{creatorName,jdbcType=VARCHAR},
      </if>
      <if test="creatorEmail != null" >
        #{creatorEmail,jdbcType=VARCHAR},
      </if>
      <if test="retryTimes != null" >
        #{retryTimes,jdbcType=TINYINT},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="applicationid != null" >
        #{applicationid,jdbcType=VARCHAR},
      </if>
      <if test="elapseTime != null" >
        #{elapseTime,jdbcType=INTEGER},
      </if>
      <if test="scheduleTime != null" >
        #{scheduleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="parameters != null" >
        #{parameters,jdbcType=VARCHAR}
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ylpu.thales.scheduler.entity.SchedulerJobInstance" >
    update t_thales_scheduler_job_instance
    <set >
      <if test="jobId != null" >
        job_id = #{jobId,jdbcType=INTEGER},
      </if>
      <if test="taskState != null" >
        task_state = #{taskState,jdbcType=TINYINT},
      </if>
      <if test="logUrl != null" >
        log_url = #{logUrl,jdbcType=VARCHAR},
      </if>
      <if test="logPath != null" >
        log_path = #{logPath,jdbcType=VARCHAR},
      </if>
      <if test="worker != null" >
        worker = #{worker,jdbcType=VARCHAR},
      </if>
      <if test="creatorName != null" >
        creator_name = #{creatorName,jdbcType=VARCHAR},
      </if>
      <if test="creatorEmail != null" >
        creator_email = #{creatorEmail,jdbcType=VARCHAR},
      </if>
      <if test="retryTimes != null" >
        retry_times = #{retryTimes,jdbcType=TINYINT},
      </if>
      <if test="pid != null" >
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="applicationid != null" >
        applicationId = #{applicationid,jdbcType=VARCHAR},
      </if>
      <if test="elapseTime != null" >
        elapse_time = #{elapseTime,jdbcType=INTEGER},
      </if>
      <if test="scheduleTime != null" >
        schedule_time = #{scheduleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="parameters != null" >
        #{parameters,jdbcType=VARCHAR}
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ylpu.thales.scheduler.entity.SchedulerJobInstance" >
    update t_thales_scheduler_job_instance
    set job_id = #{jobId,jdbcType=INTEGER},
      task_state = #{taskState,jdbcType=TINYINT},
      log_url = #{logUrl,jdbcType=VARCHAR},
      log_path = #{logPath,jdbcType=VARCHAR},
      worker = #{worker,jdbcType=VARCHAR},
      creator_name = #{creatorName,jdbcType=VARCHAR},
      creator_email = #{creatorEmail,jdbcType=VARCHAR},
      retry_times = #{retryTimes,jdbcType=TINYINT},
      pid = #{pid,jdbcType=INTEGER},
      applicationId = #{applicationid,jdbcType=VARCHAR},
      elapse_time = #{elapseTime,jdbcType=INTEGER},
      schedule_time = #{scheduleTime,jdbcType=TIMESTAMP},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
      parameters = #{parameters,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <update id = "updateJobStatus">
    update t_thales_scheduler_job_instance
    set task_state = #{status,jdbcType=TINYINT},
    update_time = #{date,jdbcType=TIMESTAMP} 
    where 1=1 
    <if test="ids != null and ids.size > 0">
       and id in
       <foreach collection="ids" index="index" item="id" open="(" separator="," close=")">  
          #{id}
       </foreach>
    </if>
  </update>
  
  <update id="markStatus" parameterType="com.ylpu.thales.scheduler.entity.SchedulerJobInstance" >
    update t_thales_scheduler_job_instance
    set task_state = 9,update_time = #{date,jdbcType=TIMESTAMP} where task_state in (1,2,3,4,5,6)
  </update>
  <select id = "getTaskLineByJobId" parameterType="java.lang.Integer" resultMap="taskElapseMap">
    select schedule_time,elapse_time from t_thales_scheduler_job_instance where job_id = #{id,jdbcType=INTEGER}
      order by schedule_time desc limit 30;
  </select>
</mapper>